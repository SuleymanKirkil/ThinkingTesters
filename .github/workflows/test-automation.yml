name: Test Automation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [ qa, staging ]
      fail-fast: false

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Set up Chrome
      uses: browser-actions/setup-chrome@latest

    - name: Set up Xvfb
      run: |
        sudo apt-get install -y xvfb
        Xvfb :99 &
        echo "DISPLAY=:99" >> $GITHUB_ENV

    - name: Set Environment Variables
      run: |
        if [ "${{ matrix.environment }}" = "qa" ]; then
          echo "TEST_USER_EMAIL=${{ secrets.QA_TEST_USER_EMAIL }}" >> $GITHUB_ENV
          echo "TEST_USER_PASSWORD=${{ secrets.QA_TEST_USER_PASSWORD }}" >> $GITHUB_ENV
        else
          echo "TEST_USER_EMAIL=${{ secrets.STAGING_TEST_USER_EMAIL }}" >> $GITHUB_ENV
          echo "TEST_USER_PASSWORD=${{ secrets.STAGING_TEST_USER_PASSWORD }}" >> $GITHUB_ENV
        fi

    - name: Run Tests
      env:
        DISPLAY: :99
        CI: true
        TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
        TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
      run: |
        mvn test \
        -Dtest.environment=${{ matrix.environment }} \
        -DCI=true \
        -Dorg.slf4j.simpleLogger.defaultLogLevel=DEBUG \
        -Dwebdriver.chrome.verboseLogging=true \
        -Dselenium.webdriver.verbose=true \
        -Dcucumber.filter.tags="not @KnownIssue" \
        -Dbrowser=chrome \
        -Dheadless=true \
        -Dsurefire.useFile=true \
        -Dmaven.test.failure.ignore=true \
        -Dtest.user.email=${TEST_USER_EMAIL} \
        -Dtest.user.password=${TEST_USER_PASSWORD}

    - name: Verify Test Results Directory
      if: always()
      run: |
        echo "Listing test results directory:"
        ls -la target/surefire-reports/ || true
        echo "Checking XML files:"
        find target/surefire-reports -name "*.xml" || true

    - name: Generate Allure Report
      if: always()
      run: mvn allure:report

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.environment }}
        path: |
          target/cucumber-reports/
          target/allure-results/
          target/surefire-reports/
          target/screenshots/

    - name: Publish Test Results
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: Test Results (${{ matrix.environment }})
        path: target/surefire-reports/*.xml
        reporter: java-junit

  notify:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always()
