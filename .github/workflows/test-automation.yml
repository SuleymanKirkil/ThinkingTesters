name: Test Automation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [ qa, staging ]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Set up Chrome
      uses: browser-actions/setup-chrome@latest

    - name: Set up Xvfb
      run: |
        sudo apt-get install -y xvfb
        Xvfb :99 &
        echo "DISPLAY=:99" >> $GITHUB_ENV

    - name: Create Directories
      run: |
        mkdir -p target/cucumber-reports
        mkdir -p target/surefire-reports
        mkdir -p target/allure-results
        mkdir -p target/screenshots

    - name: Run Tests
      env:
        DISPLAY: :99
        CI: true
        TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
        TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
      run: |
        mvn clean test \
        -Dtest.environment=${{ matrix.environment }} \
        -DCI=true \
        -Dwebdriver.chrome.verboseLogging=true \
        -Dselenium.webdriver.verbose=true \
        -Dbrowser=chrome \
        -Dheadless=true \
        -Dsurefire.useFile=true \
        -Dmaven.test.failure.ignore=true \
        -Dtest.user.email=${TEST_USER_EMAIL} \
        -Dtest.user.password=${TEST_USER_PASSWORD}

    - name: Generate Cucumber Reports
      if: always()
      run: |
        mvn verify -DskipTests \
        -Dcucumber.plugin="json:target/cucumber-reports/cucumber.json,html:target/cucumber-reports/cucumber-pretty"

    - name: List Generated Files
      if: always()
      run: |
        echo "Listing test results directories:"
        ls -R target/

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.environment }}
        path: |
          target/cucumber-reports/
          target/allure-results/
          target/surefire-reports/
          target/screenshots/
        if-no-files-found: warn

    - name: Publish Test Results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Test Results (${{ matrix.environment }})
        path: "target/surefire-reports/TEST-*.xml"
        reporter: java-junit
        fail-on-error: false
