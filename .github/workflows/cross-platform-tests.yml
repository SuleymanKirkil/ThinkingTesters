name: Cross Platform Tests

on:
  workflow_dispatch:
    inputs:
      test_environment:
        description: 'Select test environment'
        required: true
        default: 'qa'
        type: choice
        options:
        - qa
        - staging
      browser_set:
        description: 'Select browser set'
        required: true
        default: 'chrome'
        type: choice
        options:
        - chrome
        - firefox
        - edge
        - safari
        - all

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  chrome-tests:
    name: Chrome - ${{ matrix.os }}
    if: inputs.browser_set == 'chrome' || inputs.browser_set == 'all'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - uses: browser-actions/setup-chrome@latest
      - name: Set up Xvfb (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install -y xvfb
          Xvfb :99 &
          echo "DISPLAY=:99" >> $GITHUB_ENV
      - name: Run Tests (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        env:
          CI: true
          TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
        run: |
          mvn clean test "-Dtest.environment=${{ inputs.test_environment }}" "-Dbrowser=chrome" "-Dheadless=true"
      - name: Run Tests (Unix)
        if: matrix.os != 'windows-latest'
        env:
          CI: true
          TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
          DISPLAY: ${{ matrix.os == 'ubuntu-latest' && ':99' || '' }}
        run: |
          mvn clean test \
          -Dtest.environment=${{ inputs.test_environment }} \
          -Dbrowser=chrome \
          -Dheadless=true
      - name: Generate Cucumber Reports
        if: always()
        run: |
          mvn verify -DskipTests \
          -Dcucumber.report.formats=json,html \
          -Dcucumber.report.outputDirectory=target/cucumber-reports \
          -Dcucumber.json.output.directory=target/cucumber-reports \
          -Dcucumber.json.output.file=target/cucumber-reports/cucumber.json
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-chrome-${{ matrix.os }}
          path: |
            target/cucumber-reports/
            target/surefire-reports/
            target/screenshots/
          if-no-files-found: warn
      - name: Publish Test Results
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Chrome Test Results (${{ matrix.os }})
          path: target/surefire-reports/TEST-*.xml
          reporter: java-junit
          fail-on-error: false

  firefox-tests:
    name: Firefox - ${{ matrix.os }}
    if: inputs.browser_set == 'firefox' || inputs.browser_set == 'all'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - uses: browser-actions/setup-firefox@latest
      - name: Set up Xvfb (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install -y xvfb
          Xvfb :99 &
          echo "DISPLAY=:99" >> $GITHUB_ENV
      - name: Run Tests (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        env:
          CI: true
          TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
        run: |
          mvn clean test "-Dtest.environment=${{ inputs.test_environment }}" "-Dbrowser=firefox" "-Dheadless=true"
      - name: Run Tests (Unix)
        if: matrix.os != 'windows-latest'
        env:
          CI: true
          TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
          DISPLAY: ${{ matrix.os == 'ubuntu-latest' && ':99' || '' }}
        run: |
          mvn clean test \
          -Dtest.environment=${{ inputs.test_environment }} \
          -Dbrowser=firefox \
          -Dheadless=true
      - name: Generate Cucumber Reports
        if: always()
        run: |
          mvn verify -DskipTests \
          -Dcucumber.report.formats=json,html \
          -Dcucumber.report.outputDirectory=target/cucumber-reports \
          -Dcucumber.json.output.directory=target/cucumber-reports \
          -Dcucumber.json.output.file=target/cucumber-reports/cucumber.json
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-firefox-${{ matrix.os }}
          path: |
            target/cucumber-reports/
            target/surefire-reports/
            target/screenshots/
          if-no-files-found: warn
      - name: Publish Test Results
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Firefox Test Results (${{ matrix.os }})
          path: target/surefire-reports/TEST-*.xml
          reporter: java-junit
          fail-on-error: false

  edge-tests:
    name: Edge - ${{ matrix.os }}
    if: inputs.browser_set == 'edge' || inputs.browser_set == 'all'
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - uses: browser-actions/setup-edge@latest
      - name: Run Tests (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        env:
          CI: true
          TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
        run: |
          mvn clean test "-Dtest.environment=${{ inputs.test_environment }}" "-Dbrowser=edge" "-Dheadless=true"
      - name: Run Tests (Unix)
        if: matrix.os != 'windows-latest'
        env:
          CI: true
          TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
        run: |
          mvn clean test \
          -Dtest.environment=${{ inputs.test_environment }} \
          -Dbrowser=edge \
          -Dheadless=true
      - name: Generate Cucumber Reports
        if: always()
        run: |
          mvn verify -DskipTests \
          -Dcucumber.report.formats=json,html \
          -Dcucumber.report.outputDirectory=target/cucumber-reports \
          -Dcucumber.json.output.directory=target/cucumber-reports \
          -Dcucumber.json.output.file=target/cucumber-reports/cucumber.json
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-edge-${{ matrix.os }}
          path: |
            target/cucumber-reports/
            target/surefire-reports/
            target/screenshots/
          if-no-files-found: warn
      - name: Publish Test Results
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Edge Test Results (${{ matrix.os }})
          path: target/surefire-reports/TEST-*.xml
          reporter: java-junit
          fail-on-error: false

  safari-tests:
    name: Safari - macOS
    if: inputs.browser_set == 'safari' || inputs.browser_set == 'all'
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Set up Safari
        run: |
          sudo safaridriver --enable
          defaults write com.apple.Safari WebKitJavaScriptCanOpenWindowsAutomatically 1
      - name: Run Tests
        env:
          CI: true
          TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
        run: |
          mvn clean test \
          -Dtest.environment=${{ inputs.test_environment }} \
          -Dbrowser=safari \
          -Dheadless=true
      - name: Generate Cucumber Reports
        if: always()
        run: |
          mvn verify -DskipTests \
          -Dcucumber.report.formats=json,html \
          -Dcucumber.report.outputDirectory=target/cucumber-reports \
          -Dcucumber.json.output.directory=target/cucumber-reports \
          -Dcucumber.json.output.file=target/cucumber-reports/cucumber.json
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-safari-macos
          path: |
            target/cucumber-reports/
            target/surefire-reports/
            target/screenshots/
          if-no-files-found: warn
      - name: Publish Test Results
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Safari Test Results (macOS)
          path: target/surefire-reports/TEST-*.xml
          reporter: java-junit
          fail-on-error: false

  notify:
    needs: [chrome-tests, firefox-tests, edge-tests, safari-tests]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Send Test Summary
        run: |
          echo "Cross Platform Test Summary"
          echo "Environment: ${{ inputs.test_environment }}"
          echo "Browser Set: ${{ inputs.browser_set }}"
          echo "Chrome Status: ${{ needs.chrome-tests.result }}"
          echo "Firefox Status: ${{ needs.firefox-tests.result }}"
          echo "Edge Status: ${{ needs.edge-tests.result }}"
          echo "Safari Status: ${{ needs.safari-tests.result }}"
